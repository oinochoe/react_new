import{createAction,handleActions}from"redux-actions";import{delay,put,takeEvery,takeLatest}from"redux-saga/effects";const INCREASE="counter/INCREASE",DECREASE="counter/DECREASE",INCREASE_ASYNC="counter/INCREASE_ASYNC",DECREASE_ASYNC="counter/DECREASE_ASYNC";export const increase=createAction(INCREASE);export const decrease=createAction(DECREASE);export const increaseAsync=createAction(INCREASE_ASYNC,()=>{});export const decreaseAsync=createAction(DECREASE_ASYNC,()=>{});function*increaseSaga(){yield delay(1e3),yield put(increase())}function*decreaseSaga(){yield delay(1e3),yield put(decrease())}export function*counterSaga(){yield takeEvery(INCREASE_ASYNC,increaseSaga),yield takeLatest(DECREASE_ASYNC,decreaseSaga)}const initialState=0,counter=handleActions({[INCREASE]:state=>state+1,[DECREASE]:state=>state-1},0);export default counter;